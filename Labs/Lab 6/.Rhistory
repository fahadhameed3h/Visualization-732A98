knitr::opts_chunk$set(echo = TRUE)
nodes <- read.delim("trainMeta.dat",sep = " ",header = FALSE)
colnames(nodes) <- c("label","group")
nodes$title <- nodes$label
nodes$id <- 1:dim(nodes)[1]
nodes2 <- nodes[,c(4,2,1,3)]
edges <- read.delim("trainData.dat", sep = " ")
edges <- edges[,c(2,3,4)]
colnames(edges) <- c("from","to","value")
graph <- graph_from_data_frame(d=edges, vertices=nodes2, directed=T)
library(tourr)
library(plotly)
library(igraph)
library(visNetwork)
library(seriation)
nodes <- read.delim("trainMeta.dat",sep = " ",header = FALSE)
colnames(nodes) <- c("label","group")
nodes$title <- nodes$label
nodes$id <- 1:dim(nodes)[1]
nodes2 <- nodes[,c(4,2,1,3)]
edges <- read.delim("trainData.dat", sep = " ")
edges <- edges[,c(2,3,4)]
colnames(edges) <- c("from","to","value")
graph <- graph_from_data_frame(d=edges, vertices=nodes2, directed=T)
nodes2$value <- strength(graph)
Network <- visNetwork(nodes2, edges)%>%
visPhysics(solver='repulsion') %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = list(from = 1, to = 2),
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
Network
nodes <- read.delim("trainMeta.dat",sep = " ",header = FALSE)
colnames(nodes) <- c("label","group")
nodes$title <- nodes$label
nodes$id <- 1:dim(nodes)[1]
nodes2 <- nodes[,c(4,2,1,3)]
edges <- read.delim("trainData.dat", sep = " ")
edges <- edges[,c(2,3,4)]
colnames(edges) <- c("from","to","value")
graph <- graph_from_data_frame(d=edges, vertices=nodes2, directed=T)
nodes2$value <- strength(graph)
Network <- visNetwork(nodes2, edges)%>%
visPhysics(solver='repulsion') %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
Network
Network2 <- visNetwork(nodes, edges)%>%
visPhysics(solver='repulsion') %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = list(from = 1, to = 2),
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
Network2
Network2 <- visNetwork(nodes, edges)%>%
visPhysics(solver='repulsion') %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = list(from = 1, to = 0),
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
Network2
new_nodes1 <- nodes2
graph2 <- graph_from_data_frame(d=edges, vertices=nodes2, directed=F)
ceb <- cluster_edge_betweenness(graph2)
new_nodes1$group=ceb$membership
Network3 <- visNetwork(new_nodes1,edges) %>%
visPhysics(solver='repulsion') %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,labelOnly = FALSE, hover = TRUE))
Network3
nodes <- read.delim("trainMeta.dat",sep = " ",header = FALSE)
colnames(nodes) <- c("label","group")
nodes$title <- nodes$label
nodes$id <- 1:dim(nodes)[1]
nodes2 <- nodes[,c(4,2,1,3)]
edges <- read.delim("trainData.dat", sep = " ")
edges <- edges[,c(2,3,4)]
colnames(edges) <- c("from","to","value")
graph <- graph_from_data_frame(d=edges, vertices=nodes2, directed=T)
nodes2$value <- strength(graph)
Network <- visNetwork(nodes2, edges)%>%
visPhysics(solver='repulsion') %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
Network
nodes <- read.delim("trainMeta.dat",sep = " ",header = FALSE)
colnames(nodes) <- c("label","group")
nodes$title <- nodes$label
nodes$id <- 1:dim(nodes)[1]
nodes2 <- nodes[,c(4,2,1,3)]
edges <- read.delim("trainData.dat", sep = " ")
edges <- edges[,c(2,3,4)]
colnames(edges) <- c("from","to","value")
graph <- graph_from_data_frame(d=edges, vertices=nodes2, directed=T)
nodes2$value <- strength(graph)
Network <- visNetwork(nodes2, edges)%>%
visPhysics(solver='repulsion') %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
Network
nodes <- read.delim("trainMeta.dat",sep = " ",header = FALSE)
colnames(nodes) <- c("label","group")
nodes$title <- nodes$label
nodes$id <- 1:dim(nodes)[1]
nodes2 <- nodes[,c(4,2,1,3)]
edges <- read.delim("trainData.dat", sep = " ")
edges <- edges[,c(2,3,4)]
colnames(edges) <- c("from","to","value")
graph <- graph_from_data_frame(d=edges, vertices=nodes2, directed=T)
nodes2$value <- strength(graph)
Network <- visNetwork(nodes2, edges)%>%
visPhysics(solver='repulsion') %>%
visOptions(highlightNearest = list(enabled = TRUE, degree = 1,
labelOnly = FALSE, hover = TRUE),
nodesIdSelection = TRUE)
Network
Oilcoal <- read.csv2("Oilcoal.csv")
Oilcoal <- as.data.frame(Oilcoal)
Oilcoal$Coal <- as.numeric(Oilcoal$Coal)
Oilcoal$Oil <- as.numeric(Oilcoal$Oil)
Oilcoal$Marker.size <- as.numeric(Oilcoal$Marker.size)
plot_ly(Oilcoal, x=~Coal, y=~Oil, frame =~Year, size =~Marker.size, color =~Country) %>%
animation_opts(100, easing = "elastic", redraw = F)
Oilcoal$Oil_p <- Oilcoal$Oil/(Oilcoal$Oil + Oilcoal$Coal)*100
Oilcoal_new <- Oilcoal[rep(row.names(Oilcoal),2), ]
Oilcoal_new[361:720,]$Oil_p <- 0
Oilcoal_new <- Oilcoal_new[,c(1,2,3,4,5,7)]
Oilcoal_new <- Oilcoal_new[order(Oilcoal_new$Year, Oilcoal_new$Country),]
p3 <- Oilcoal_new %>%
plot_ly(x = ~Country, y = ~Oil_p, size = ~Marker.size, color = ~Country,
frame = ~Year, text = ~Country, type = 'scatter',mode = "lines",showlegend = T
)
p3
Oilcoal$Oil_p <- Oilcoal$Oil/(Oilcoal$Oil + Oilcoal$Coal)*100
Oilcoal_new <- Oilcoal[rep(row.names(Oilcoal),2), ]
Oilcoal_new[361:720,]$Oil_p <- 0
Oilcoal_new <- Oilcoal_new[,c(1,2,3,4,5,7)]
Oilcoal_new <- Oilcoal_new[order(Oilcoal_new$Year, Oilcoal_new$Country),]
p3 <- Oilcoal_new %>%
plot_ly(x = ~Country, y = ~Oil_p, size = ~Marker.size, color = ~Country,
frame = ~Year, line = list(width = 20), text = ~Country, type = 'scatter',mode = "lines",showlegend = T
)
p3
Oilcoal$Oil_p <- Oilcoal$Oil/(Oilcoal$Oil + Oilcoal$Coal)*100
Oilcoal_new <- Oilcoal[rep(row.names(Oilcoal),2), ]
Oilcoal_new[361:720,]$Oil_p <- 0
Oilcoal_new <- Oilcoal_new[,c(1,2,3,4,5,7)]
Oilcoal_new <- Oilcoal_new[order(Oilcoal_new$Year, Oilcoal_new$Country),]
p3 <- Oilcoal_new %>%
plot_ly(x = ~Country, y = ~Oil_p, size = ~Marker.size, color = ~Country,
frame = ~Year, line = list(width = 10), text = ~Country, type = 'scatter',mode = "lines",showlegend = T
)
p3
Oilcoal$Oil_p <- Oilcoal$Oil/(Oilcoal$Oil + Oilcoal$Coal)*100
Oilcoal_new <- Oilcoal[rep(row.names(Oilcoal),2), ]
Oilcoal_new[361:720,]$Oil_p <- 0
Oilcoal_new <- Oilcoal_new[,c(1,2,3,4,5,7)]
Oilcoal_new <- Oilcoal_new[order(Oilcoal_new$Year, Oilcoal_new$Country),]
p3 <- Oilcoal_new %>%
plot_ly(x = ~Country, y = ~Oil_p, size = ~Marker.size, color = ~Country,
frame = ~Year, line = list(width = 30), text = ~Country, type = 'scatter',mode = "lines",showlegend = T
)
p3
set.seed(12345)
mat<-Oilcoal %>%
select(Year,Country,Coal) %>%
spread(.,Country,Coal) %>%
select(-Year) %>% rescale()
set.seed(12345)
library(tidyverse)
install.packages("tidyverse")
set.seed(12345)
library(tidyverse)
mat<-Oilcoal %>%
select(Year,Country,Coal) %>%
spread(.,Country,Coal) %>%
select(-Year) %>% rescale()
rownames(mat) <- 1965:2009
tour<- new_tour(mat, guided_tour(cmass), NULL)
steps <- c(0, rep(1/15, 120))
Projs<-lapply(steps, function(step_size){
step <- tour(step_size)
if(is.null(step)) {
.GlobalEnv$tour<- new_tour(mat, guided_tour(cmass), NULL)
step <- tour(step_size)
}
step
})
# projection of each observation
tour_dat <- function(i) {
step <- Projs[[i]]
proj <- center(mat %*% step$proj)
data.frame(x = proj[,1], y = proj[,2], state = rownames(mat))
}
# projection of each variable's axis
proj_dat <- function(i) {
step <- Projs[[i]]
data.frame(
x = step$proj[,1], y = step$proj[,2], variable = colnames(mat)
)
}
stepz <- cumsum(steps)
# tidy version of tour data
tour_dats <- lapply(1:length(steps), tour_dat)
tour_datz <- Map(function(x, y) cbind(x, step = y), tour_dats, stepz)
tour_dat <- dplyr::bind_rows(tour_datz)
# tidy version of tour projection data
proj_dats <- lapply(1:length(steps), proj_dat)
proj_datz <- Map(function(x, y) cbind(x, step = y), proj_dats, stepz)
proj_dat <- dplyr::bind_rows(proj_datz)
ax <- list(
title = "", showticklabels = FALSE,
zeroline = FALSE, showgrid = FALSE,
range = c(-1.1, 1.1)
)
# for nicely formatted slider labels
options(digits = 3)
tour_dat <- highlight_key(tour_dat, ~state, group = "A")
tour <- proj_dat %>%
plot_ly(x = ~x, y = ~y, frame = ~step, color = I("black")) %>%
add_segments(xend = 0, yend = 0, color = I("gray80")) %>%
add_text(text = ~variable) %>%
add_markers(data = tour_dat, text = ~state, ids = ~state, hoverinfo = "text") %>%
layout(xaxis = ax, yaxis = ax, showlegend = F)
set.seed(12345)
library(tidyverse)
mat<-Oilcoal %>%
select(Year,Country,Coal) %>%
spread(.,Country,Coal) %>%
select(-Year) %>% rescale()
rownames(mat) <- 1965:2009
tour<- new_tour(mat, guided_tour(cmass), NULL)
steps <- c(0, rep(1/15, 120))
Projs<-lapply(steps, function(step_size){
step <- tour(step_size)
if(is.null(step)) {
.GlobalEnv$tour<- new_tour(mat, guided_tour(cmass), NULL)
step <- tour(step_size)
}
step
})
# projection of each observation
tour_dat <- function(i) {
step <- Projs[[i]]
proj <- center(mat %*% step$proj)
data.frame(x = proj[,1], y = proj[,2], state = rownames(mat))
}
# projection of each variable's axis
proj_dat <- function(i) {
step <- Projs[[i]]
data.frame(
x = step$proj[,1], y = step$proj[,2], variable = colnames(mat)
)
}
stepz <- cumsum(steps)
# tidy version of tour data
tour_dats <- lapply(1:length(steps), tour_dat)
tour_datz <- Map(function(x, y) cbind(x, step = y), tour_dats, stepz)
tour_dat <- dplyr::bind_rows(tour_datz)
# tidy version of tour projection data
proj_dats <- lapply(1:length(steps), proj_dat)
proj_datz <- Map(function(x, y) cbind(x, step = y), proj_dats, stepz)
proj_dat <- dplyr::bind_rows(proj_datz)
ax <- list(
title = "", showticklabels = FALSE,
zeroline = FALSE, showgrid = FALSE,
range = c(-1.1, 1.1)
)
# for nicely formatted slider labels
options(digits = 3)
tour_dat <- highlight_key(tour_dat, ~state, group = "A")
tour <- proj_dat %>%
plot_ly(x = ~x, y = ~y, frame = ~step, color = I("black")) %>%
add_segments(xend = 0, yend = 0, color = I("gray80")) %>%
add_text(text = ~variable) %>%
add_markers(data = tour_dat, text = ~state, ids = ~state, hoverinfo = "text") %>%
layout(xaxis = ax, yaxis = ax, showlegend = F)
tour
set.seed(12345678)
library(tidyverse)
mat<-Oilcoal %>%
select(Year,Country,Coal) %>%
spread(.,Country,Coal) %>%
select(-Year) %>% rescale()
rownames(mat) <- 1965:2009
tour<- new_tour(mat, guided_tour(cmass), NULL)
steps <- c(0, rep(1/15, 120))
Projs<-lapply(steps, function(step_size){
step <- tour(step_size)
if(is.null(step)) {
.GlobalEnv$tour<- new_tour(mat, guided_tour(cmass), NULL)
step <- tour(step_size)
}
step
})
# projection of each observation
tour_dat <- function(i) {
step <- Projs[[i]]
proj <- center(mat %*% step$proj)
data.frame(x = proj[,1], y = proj[,2], state = rownames(mat))
}
# projection of each variable's axis
proj_dat <- function(i) {
step <- Projs[[i]]
data.frame(
x = step$proj[,1], y = step$proj[,2], variable = colnames(mat)
)
}
stepz <- cumsum(steps)
# tidy version of tour data
tour_dats <- lapply(1:length(steps), tour_dat)
tour_datz <- Map(function(x, y) cbind(x, step = y), tour_dats, stepz)
tour_dat <- dplyr::bind_rows(tour_datz)
# tidy version of tour projection data
proj_dats <- lapply(1:length(steps), proj_dat)
proj_datz <- Map(function(x, y) cbind(x, step = y), proj_dats, stepz)
proj_dat <- dplyr::bind_rows(proj_datz)
ax <- list(
title = "", showticklabels = FALSE,
zeroline = FALSE, showgrid = FALSE,
range = c(-1.1, 1.1)
)
# for nicely formatted slider labels
options(digits = 3)
tour_dat <- highlight_key(tour_dat, ~state, group = "A")
tour <- proj_dat %>%
plot_ly(x = ~x, y = ~y, frame = ~step, color = I("black")) %>%
add_segments(xend = 0, yend = 0, color = I("gray80")) %>%
add_text(text = ~variable) %>%
add_markers(data = tour_dat, text = ~state, ids = ~state, hoverinfo = "text") %>%
layout(xaxis = ax, yaxis = ax, showlegend = F)
tour
oilcoal%>%filter(Country=="Brazil")%>%ggplot(aes(y=Coal,x=Year))+geom_line()
Oilcoal %>% filter(Country=="Brazil")%>%ggplot(aes(y=Coal,x=Year))+geom_line()
