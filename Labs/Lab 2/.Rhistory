#ans <- matrix(some,nrow = 5,byrow = TRUE)
}
}
for_mult_table(from=1,to=5)
answer
for_mult_table <- function(from,to)
{
for(i in from:to)
{
for(j in from:to)
{
cat(i*j)
}
#rownames(from:to)
#colnames(from:to)
#cat("\n")
#some=c(data)
#ans <- matrix(some,nrow = 5,byrow = TRUE)
}
}
for_mult_table(from=1,to=5)
#for_mult_table(from=10,to=12)
fun_quantile <- function(X){
## a
quan <- c()
Q1 <- unname(quantile(X, 0.25))
Q3 <- unname(quantile(X, 0.75))
quan <- c(Q1, Q3)
#Q1 <- unname(Q1)
#Q3 <- unname(Q3)
## b
greater <- Q3 + 1.5*(Q3 - Q1)
less <- Q1 + 1.5*(Q3 - Q1)
indices <- c()
indi <- senic[which(senic[,X]>greater || senic[,X]<less),X]$ID
#index <- senic[indi,]
return(indi)
}
Inf_risk <- fun_quantile(senic$`Infection risk`)
Inf_risk
for_mult_table <- function(from,to)
{
mul <- c()
for(i in from:to)
{
for(j in from:to)
{
mul <- (i*j)
return(mul)
}
#rownames(from:to)
#colnames(from:to)
#cat("\n")
#some=c(data)
#ans <- matrix(some,nrow = 5,byrow = TRUE)
}
}
for_mult_table(from=1,to=5)
for_mult_table <- function(from,to)
{
mul <- c()
for(i in from:to)
{
for(j in from:to)
{
mul() <- (i*j)
return(mul())
}
#rownames(from:to)
#colnames(from:to)
#cat("\n")
#some=c(data)
#ans <- matrix(some,nrow = 5,byrow = TRUE)
}
}
for_mult_table(from=1,to=5)
#for_mult_table(from=10,to=12)
data.frame("GDP..BILLIONS.")
GDP..BILLIONS.
read.csv("aegypti_albopictus")
GDP..BILLIONS.
x(1:10)
x
x <- c(1:10)
x
address(x)
library(pryr)
install.packages("pryr")
library(pryr)
x <- c(1:10)
x
address(x)
x[5] <- 11L
address(x)
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = senic, aes(x = senic$`Number of Nurses`, y = senic$`Infection risk`,
color = senic$`Number of Beds`))+
labs(x="Infection risk", y="Number of Nurses", colour="Number of Beds")+
geom_point()+
theme_light()
library(ggplot2)
library(ggplot2)
Inf_risk <- fun_quantile(senic$`Infection risk`)
setwd("C:/Users/bhavya/Desktop/Stats n ML/Visualization/Labs/lab1/47481-1042837-/Lab1_Group-19/Lab1_Group-19")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("tree_inkscape.pdf")
senic <- read.table(file="SENIC.txt")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("tree_inkscape.pdf")
senic <- read.table(file="SENIC.txt")
col_Names <- c("ID", "Length of Stay", "Age", "Infection risk",
"Routine Culturing Ratio", "Routine Chest X-ray Ratio", "Number of Beds",
"Medical School Affiliation", "Region","Average Daily Census",
"Number of Nurses", "Available Facilities & Services")
colnames(senic) <- col_Names
fun_quantile <- function(X){
Q1 <- unname(quantile(X, 0.25))
Q3 <- unname(quantile(X, 0.75))
greater <- Q3 + 1.5*(Q3 - Q1)
less <- Q1 - 1.5*(Q3 - Q1)
index <- senic[(which(X > greater | X < less)),]$ID
return(index)
}
library(ggplot2)
Inf_risk <- fun_quantile(senic$`Infection risk`)
value_Inf <- senic[Inf_risk,]$`Infection risk`
# 7.7 1.3 7.6 7.8 1.3 1.4
df_Infrisk <- as.data.frame(value_Inf)
Plot_1 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Infection risk`), size=1) +
labs(x="Infection risk", y="Density") +
geom_point(data = df_Infrisk, aes(x=value_Inf,y = 0, pch=3),size=3,shape=23,colour="red",fill="blue")
Plot_1
### Length of Stay
Lent_stay <- fun_quantile(senic$`Length of Stay`)
value_LenStay <- senic[Lent_stay,]$`Length of Stay`
# 19.56 13.95 17.94
df_Lent_stay <- as.data.frame(value_LenStay)
Plot_2 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Length of Stay`), size=1) +
labs(x="Length of Stay", y="Density") +
geom_point(data = df_Lent_stay, aes(x=value_LenStay,y = 0),size=3,shape=23,colour="red",fill="blue")
### Age
Age <- fun_quantile(senic$Age)
value_Age <- senic[Age,]$Age
# 42.0 38.8 65.9
df_Age <- as.data.frame(value_Age)
Plot_3 <- ggplot() +
geom_density(data = senic,aes(x=senic$Age), size=1) +
labs(x="Age", y="Density") +
geom_point(data = df_Age, aes(x=value_Age,y = 0),size=3,shape=23,colour="red",fill="blue")
### Routine Culturing Ratio
RouCR <- fun_quantile(senic$`Routine Culturing Ratio`)
value_RouCR <- senic[RouCR,]$`Routine Culturing Ratio`
# 60.5 46.0 52.4 42.0
df_RouCR <- as.data.frame(value_RouCR)
Plot_4 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Routine Culturing Ratio`), size=1) +
labs(x="Routine Culturing Ratio", y="Density") +
geom_point(data = df_RouCR, aes(x=value_RouCR,y = 0),size=3,shape=23,colour="red",fill="blue")
### Routine Chest X-ray Ratio
RCR <- fun_quantile(senic$`Routine Chest X-ray Ratio`)
value_RCR <- senic[RCR,]$`Routine Chest X-ray Ratio`
# 133.5
df_RCR <- as.data.frame(value_RCR)
Plot_5 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Routine Chest X-ray Ratio`), size=1) +
labs(x="Routine Chest X-ray Ratio", y="Density") +
geom_point(data = df_RCR, aes(x=value_RCR,y = 0),size=3,shape=23,colour="red",fill="blue")
### Number of Beds
Num_bed <- fun_quantile(senic$`Number of Beds`)
value_bed <- senic[Num_bed,]$`Number of Beds`
# 640 768 833 831 752 835
df_bed <- as.data.frame(value_bed)
Plot_6 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Number of Beds`), size=1) +
labs(x="Number of Beds", y="Density") +
geom_point(data = df_bed, aes(x=value_bed,y = 0),size=3,shape=23,colour="red",fill="blue")
### Average Daily Census
Avg_dai_cen <- fun_quantile(senic$`Average Daily Census`)
value_dai_cen <- senic[Avg_dai_cen,]$`Average Daily Census`
# 768 833 831 595 752 835
df_dai_cen <- as.data.frame(value_dai_cen)
Plot_7 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Average Daily Census`), size=1) +
labs(x="Average Daily Census", y="Density") +
geom_point(data = df_dai_cen, aes(x=value_dai_cen,y = 0),size=3,shape=23,colour="red",fill="blue")
### Number of Nurses
Num_nur <- fun_quantile(senic$`Number of Nurses`)
value_nur <- senic[Num_nur,]$`Number of Nurses`
# 656 519 497 629 528 469
df_Num_nur <- as.data.frame(value_nur)
Plot_8 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Number of Nurses`), size=1) +
labs(x="Number of Nurses", y="Density") +
geom_point(data = df_Num_nur, aes(x=value_nur,y = 0),size=3,shape=23,colour="red",fill="blue")
### Available Facilities & Services
Ava_fac <- fun_quantile(senic$`Available Facilities & Services`)
value_Ava_fac <- senic[Ava_fac,]$`Available Facilities & Services`
# No Outliers
df_Ava_fac <- as.data.frame(value_Ava_fac)
Plot_9 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Available Facilities & Services`), size=1) +
labs(x="Available Facilities & Services", y="Density")
#### arrangeGrob
library(gridExtra)
Plot_List <- list(Plot_1, Plot_2,Plot_3,Plot_4,Plot_5,Plot_6,Plot_7,Plot_8,Plot_9)
Plot_Final <- arrangeGrob(grobs = Plot_List, nrow=2)
par(mfrow=c(3, 3))
plot(Plot_Final)
ggplot(data = senic, aes(x = senic$`Number of Nurses`, y = senic$`Infection risk`,
color = senic$`Number of Beds`))+
labs(x="Infection risk", y="Number of Nurses", colour="Number of Beds")+
geom_point()+
theme_light()
library(plotly)
library(later)
ggplotly(Plot_1)
library(dplyr)
riskIndex <- fun_quantile(senic$`Infection risk`)
outliersRisk <- senic[riskIndex,]
plt <- senic %>% select('Infection risk') %>%
mutate(Rank=ntile(senic$`Infection risk`,3)) %>%
plot_ly(x=senic$`Infection risk`, type = "histogram") %>%
add_markers(x = outliersRisk$'Infection risk' , y = 0,marker = list(size =10 ,symbol = 23,color = "red") )
plt
library(shiny)
senic <- read.table("SENIC.txt")
colnames(senic) <- c("ID","STAY","AGE","RISK","CULTURE_RATIO","CHEST","BEDS","AFFILIATION","REGION","CENSUS","NURSES","FS")
fun_quantile <- function(X){
Q1 <- unname(quantile(X, 0.25))
Q3 <- unname(quantile(X, 0.75))
greater <- Q3 + 1.5*(Q3 - Q1)
less <- Q1 - 1.5*(Q3 - Q1)
index <- senic[(which(X > greater | X < less)),]$ID
return(index)
}
Select_Variables <- c("STAY","AGE","RISK","CULTURE_RATIO","CHEST","BEDS","CENSUS","NURSES","FS")
ui <- fluidPage(
sliderInput(inputId="bw_value", label="Choose bandwidth size", value=0.1, min=0.01, max=1),
checkboxGroupInput("var", "Variables ", Select_Variables , inline=TRUE,selected = "STAY"),
plotOutput("densPlot")
)
server <- function(input, output) {
output$densPlot <- renderPlot({
sele <- input$var
lst <- vector("list" , length = length(sele))
for (i  in 1:length(sele)) {
vals <- fun_quantile(senic[,sele[i]])
senic2 <- senic[vals,]
lst[[i]] <- ggplot() + geom_density(data = senic, aes_string(x = sele[i] ), size=1,bw = input$bw_value) +
geom_point(data=senic2, aes_string(x = sele[i],y=0, pch=3),size=3,shape=23,colour="red",fill="blue") +
scale_shape_identity()
}
final <- arrangeGrob(grobs = lst)
grid.arrange(final)
})
}
shinyApp(ui = ui, server = server)
library(dplyr)
riskIndex <- fun_quantile(senic$`Infection risk`)
outliersRisk <- senic[riskIndex,]
plt <- senic %>% select('Infection risk') %>%
mutate(Rank=ntile(senic$`Infection risk`,3)) %>%
plot_ly(x=senic$`Infection risk`, type = "histogram") %>%
add_markers(x = outliersRisk$'Infection risk' , y = 0,marker = list(size =10 ,symbol = 23,color = "red") ) %>% layout(showlegend = TRUE)
library(dplyr)
riskIndex <- fun_quantile(senic$`Infection risk`)
outliersRisk <- senic[riskIndex,]
plt <- senic %>% select('Infection risk') %>%
mutate(Rank=ntile(senic$`Infection risk`,3)) %>%
plot_ly(x=senic$`Infection risk`, type = "histogram") %>%
add_markers(x = outliersRisk$'Infection risk' , y = 0,marker = list(size =10 ,symbol = 23,color = "red") ) #%>% layout(showlegend = TRUE)
library(dplyr)
riskIndex <- fun_quantile(senic$`Infection risk`)
outliersRisk <- senic[riskIndex,]
plt <- senic %>% select('Infection risk') %>%
mutate(Rank=ntile(senic$`Infection risk`,3)) %>%
plot_ly(x=senic$`Infection risk`, type = "histogram") %>%
add_markers(x = outliersRisk$'Infection risk' , y = 0,marker = list(size =10 ,symbol = 23,color = "red") )
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("tree_inkscape.pdf")
senic <- read.table(file="SENIC.txt")
col_Names <- c("ID", "Length of Stay", "Age", "Infection risk",
"Routine Culturing Ratio", "Routine Chest X-ray Ratio", "Number of Beds",
"Medical School Affiliation", "Region","Average Daily Census",
"Number of Nurses", "Available Facilities & Services")
colnames(senic) <- col_Names
fun_quantile <- function(X){
Q1 <- unname(quantile(X, 0.25))
Q3 <- unname(quantile(X, 0.75))
greater <- Q3 + 1.5*(Q3 - Q1)
less <- Q1 - 1.5*(Q3 - Q1)
index <- senic[(which(X > greater | X < less)),]$ID
return(index)
}
library(ggplot2)
Inf_risk <- fun_quantile(senic$`Infection risk`)
value_Inf <- senic[Inf_risk,]$`Infection risk`
# 7.7 1.3 7.6 7.8 1.3 1.4
df_Infrisk <- as.data.frame(value_Inf)
Plot_1 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Infection risk`), size=1) +
labs(x="Infection risk", y="Density") +
geom_point(data = df_Infrisk, aes(x=value_Inf,y = 0, pch=3),size=3,shape=23,colour="red",fill="blue")
Plot_1
### Length of Stay
Lent_stay <- fun_quantile(senic$`Length of Stay`)
value_LenStay <- senic[Lent_stay,]$`Length of Stay`
# 19.56 13.95 17.94
df_Lent_stay <- as.data.frame(value_LenStay)
Plot_2 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Length of Stay`), size=1) +
labs(x="Length of Stay", y="Density") +
geom_point(data = df_Lent_stay, aes(x=value_LenStay,y = 0),size=3,shape=23,colour="red",fill="blue")
### Age
Age <- fun_quantile(senic$Age)
value_Age <- senic[Age,]$Age
# 42.0 38.8 65.9
df_Age <- as.data.frame(value_Age)
Plot_3 <- ggplot() +
geom_density(data = senic,aes(x=senic$Age), size=1) +
labs(x="Age", y="Density") +
geom_point(data = df_Age, aes(x=value_Age,y = 0),size=3,shape=23,colour="red",fill="blue")
### Routine Culturing Ratio
RouCR <- fun_quantile(senic$`Routine Culturing Ratio`)
value_RouCR <- senic[RouCR,]$`Routine Culturing Ratio`
# 60.5 46.0 52.4 42.0
df_RouCR <- as.data.frame(value_RouCR)
Plot_4 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Routine Culturing Ratio`), size=1) +
labs(x="Routine Culturing Ratio", y="Density") +
geom_point(data = df_RouCR, aes(x=value_RouCR,y = 0),size=3,shape=23,colour="red",fill="blue")
### Routine Chest X-ray Ratio
RCR <- fun_quantile(senic$`Routine Chest X-ray Ratio`)
value_RCR <- senic[RCR,]$`Routine Chest X-ray Ratio`
# 133.5
df_RCR <- as.data.frame(value_RCR)
Plot_5 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Routine Chest X-ray Ratio`), size=1) +
labs(x="Routine Chest X-ray Ratio", y="Density") +
geom_point(data = df_RCR, aes(x=value_RCR,y = 0),size=3,shape=23,colour="red",fill="blue")
### Number of Beds
Num_bed <- fun_quantile(senic$`Number of Beds`)
value_bed <- senic[Num_bed,]$`Number of Beds`
# 640 768 833 831 752 835
df_bed <- as.data.frame(value_bed)
Plot_6 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Number of Beds`), size=1) +
labs(x="Number of Beds", y="Density") +
geom_point(data = df_bed, aes(x=value_bed,y = 0),size=3,shape=23,colour="red",fill="blue")
### Average Daily Census
Avg_dai_cen <- fun_quantile(senic$`Average Daily Census`)
value_dai_cen <- senic[Avg_dai_cen,]$`Average Daily Census`
# 768 833 831 595 752 835
df_dai_cen <- as.data.frame(value_dai_cen)
Plot_7 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Average Daily Census`), size=1) +
labs(x="Average Daily Census", y="Density") +
geom_point(data = df_dai_cen, aes(x=value_dai_cen,y = 0),size=3,shape=23,colour="red",fill="blue")
### Number of Nurses
Num_nur <- fun_quantile(senic$`Number of Nurses`)
value_nur <- senic[Num_nur,]$`Number of Nurses`
# 656 519 497 629 528 469
df_Num_nur <- as.data.frame(value_nur)
Plot_8 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Number of Nurses`), size=1) +
labs(x="Number of Nurses", y="Density") +
geom_point(data = df_Num_nur, aes(x=value_nur,y = 0),size=3,shape=23,colour="red",fill="blue")
### Available Facilities & Services
Ava_fac <- fun_quantile(senic$`Available Facilities & Services`)
value_Ava_fac <- senic[Ava_fac,]$`Available Facilities & Services`
# No Outliers
df_Ava_fac <- as.data.frame(value_Ava_fac)
Plot_9 <- ggplot() +
geom_density(data = senic,aes(x=senic$`Available Facilities & Services`), size=1) +
labs(x="Available Facilities & Services", y="Density")
#### arrangeGrob
library(gridExtra)
Plot_List <- list(Plot_1, Plot_2,Plot_3,Plot_4,Plot_5,Plot_6,Plot_7,Plot_8,Plot_9)
Plot_Final <- arrangeGrob(grobs = Plot_List, nrow=2)
par(mfrow=c(3, 3))
plot(Plot_Final)
ggplot(data = senic, aes(x = senic$`Number of Nurses`, y = senic$`Infection risk`,
color = senic$`Number of Beds`))+
labs(x="Infection risk", y="Number of Nurses", colour="Number of Beds")+
geom_point()+
theme_light()
library(plotly)
library(later)
ggplotly(Plot_1)
library(dplyr)
riskIndex <- fun_quantile(senic$`Infection risk`)
outliersRisk <- senic[riskIndex,]
plt <- senic %>% select('Infection risk') %>%
mutate(Rank=ntile(senic$`Infection risk`,3)) %>%
plot_ly(x=senic$`Infection risk`, type = "histogram") %>%
add_markers(x = outliersRisk$'Infection risk' , y = 0,marker = list(size =10 ,symbol = 23,color = "red") )
plt
library(dplyr)
riskIndex <- fun_quantile(senic$`Infection risk`)
outliersRisk <- senic[riskIndex,]
plt <- senic %>% select('Infection risk') %>%
mutate(Rank=ntile(senic$`Infection risk`,3)) %>%
plot_ly(x=senic$`Infection risk`, type = "histogram") %>%
add_markers(x = outliersRisk$'Infection risk' , y = 0,marker = list(size =10 ,symbol = 23,color = "red") )
plt
library(dplyr)
riskIndex <- fun_quantile(senic$`Infection risk`)
outliersRisk <- senic[riskIndex,]
plt <- senic %>% select('Infection risk') %>%
mutate(Rank=ntile(senic$`Infection risk`,3)) %>%
plot_ly(x=senic$`Infection risk`, type = "histogram") %>%
add_markers(x = outliersRisk$'Infection risk' , y = 0,marker = list(size =10 ,symbol = 23,color = "red") ) %>% layout(showlegend = TRUE)
plt
library(dplyr)
riskIndex <- fun_quantile(senic$`Infection risk`)
outliersRisk <- senic[riskIndex,]
plt <- senic %>% select('Infection risk') %>%
mutate(Rank=ntile(senic$`Infection risk`,3)) %>%
plot_ly(x=senic$`Infection risk`, type = "histogram") %>%
add_markers(x = outliersRisk$'Infection risk' , y = 0,marker = list(size =10 ,symbol = 23,color = "red") ) %>% layout(showlegend = F)
plt
setwd("C:/Users/bhavya/Desktop/Stats n ML")
setwd("C:/Users/bhavya/Desktop/Stats n ML/Visualization/Labs/lab2/47583-1046964-/Lab2_group-19")
library(ggplot2)
olive <- read.csv("olive.csv")
## 1 Palmitic on Oleic
ggplot(olive, aes(x=palmitic, y=oleic, col=linolenic)) + geom_point()  +
labs(x="Palmitic", y="Oleic", colour="Linolenic") +
theme_classic() + ggtitle("Palmitic VS Oleic")
X_cut <- cut_interval(x=olive$linolenic, n = 4)
ggplot(olive, aes(x=palmitic, y=oleic, col=X_cut)) + geom_point()  +
labs(x="Palmitic", y="Oleic", colour="Discretized Variable") +
theme_classic() + ggtitle("Palmitic VS Oleic")
## 2 Palmitic vs Oleic
### a  Color
ggplot(olive, aes(x=palmitic, y=oleic,col=X_cut)) + geom_point()  +
labs(x="Palmitic", y="Oleic", colour="Discretized Variable") +
theme_classic() + ggtitle("Palmitic VS Oleic")
### b  Size
ggplot(olive, aes(x=palmitic, y=oleic)) + geom_point(size=X_cut)  +
labs(x="Palmitic", y="Oleic", colour="Discretized Variable") +
theme_classic() + ggtitle("Palmitic VS Oleic")
### c  Orientation Angle
ggplot(olive, aes(x=palmitic, y=oleic)) + geom_point()  +
geom_spoke(aes(angle = as.numeric(X_cut)), radius = 50) +
labs(x="Palmitic", y="Oleic", colour="Discretized Variable") +
theme_classic() + ggtitle("Palmitic VS Oleic")
## 3 Oleic vs Eicosenoic
ggplot(olive, aes(x=oleic, y=eicosenoic,col=Region)) + geom_point()  +
labs(x="Oleic", y="Eicosenoic", colour="Region") +
theme_classic() + ggtitle("Oleic VS Eicosenoic")
Region_categorical <- as.factor(olive$Region)
ggplot(olive, aes(x=oleic, y=eicosenoic,col=Region_categorical)) + geom_point()  +
labs(x="Oleic", y="Eicosenoic", colour="Region CV") +
theme_classic() + ggtitle("Oleic VS Eicosenoic")
## 4 Oleic vs Eicosenoic
Color_linoleic <- cut_interval(x=olive$linoleic, n = 3)
shape_palmitic <- cut_interval(x=olive$palmitic, n = 3)
size_palmitoleic <- cut_interval(x=olive$palmitoleic, n = 3)
ggplot(olive, aes(x=oleic, y=eicosenoic,col=Color_linoleic)) +
geom_point(shape = shape_palmitic,size=size_palmitoleic)  +
labs(x="Oleic", y="Eicosenoic", colour="Classes") +
theme_classic() + ggtitle("Oleic VS Eicosenoic")
## 5 Oleic vs Eicosenoic
ggplot(olive, aes(x=oleic, y=eicosenoic,col=Region)) +
geom_point(shape = shape_palmitic,size=size_palmitoleic)  +
labs(x="Oleic", y="Eicosenoic", colour="Classes") +
theme_classic() + ggtitle("Oleic VS Eicosenoic")
#PP<- plot_ly(olive, labels = ~Area, values = ~oleic, type = 'pie') %>%
#                          layout(showlegend = FALSE)
#PP
## 7 Linoleic vs Eicosenoic
ggplot(olive, aes(x=linoleic, y=eicosenoic) ) +
geom_bin2d() +
labs(x="Linoleic", y="Eicosenoic") +
theme_classic() + ggtitle("Linoleic vs Eicosenoic Contour Plot")
ggplot(olive, aes(x=linoleic, y=eicosenoic)) +
geom_point()  +
labs(x="Linoleic", y="Eicosenoic", colour="Classes") +
theme_classic() + ggtitle("Linoleic vs Eicosenoic Scatter Plot")
library(readxl)
library(MASS)
library(plotly)
## 1
baseball = read_excel("baseball-2016.xlsx")
baseball.df <- as.data.frame(baseball)
baseball.numeric <- scale(baseball[,sapply(baseball,is.numeric)])
dist_baseball <- dist(baseball.numeric,"minkowski")
## 2 Non MDS
BB_val <- isoMDS(dist_baseball, k=2, p=2)
BB_val_df <- data.frame(BB_val)
NOMSD_plot <- ggplot(BB_val_df, aes(x=BB_val$points[,1], y=BB_val$points[,2])) + geom_point(aes(colour = baseball$League))
ggplotly(NOMSD_plot)
plot_ly(type = "scatter",data = BB_val_df,x=~BB_val$points[,1], y=~BB_val$points[,2] ,text=baseball$Team,
mode = "markers",color = ~baseball$League)
## 3 Shepard
sh <- Shepard(dist_baseball, BB_val$points)
plot(x=dist_baseball,y = dist(BB_val$points))
lines(sh$x, sh$yf, type = "S", col="red")
p <- plot_ly(BB_val_df) %>%
add_trace(x = ~dist_baseball, y = ~dist(BB_val$points), type = 'scatter',
marker = list(color = 'blue')) %>%
add_trace(x= ~sh$x , y = ~sh$yf, mode="lines",marker = list(color = 'red'))
p
#PP<- plot_ly(olive, labels = ~Area, values = ~oleic, type = 'pie') %>%
#                          layout(showlegend = FALSE)
#PP
PP<- plot_ly(olive, labels = ~Area, values = ~oleic, type = 'pie') %>%
layout(showlegend = FALSE)
PP
